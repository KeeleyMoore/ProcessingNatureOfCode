/* autogenerated by Processing revision 1276 on 2021-12-05 */
import processing.core.*;
import processing.data.*;
import processing.event.*;
import processing.opengl.*;

import java.util.HashMap;
import java.util.ArrayList;
import java.io.File;
import java.io.BufferedReader;
import java.io.PrintWriter;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.IOException;

public class AccelerationInputs extends PApplet {

// Exercise 1.5
// Create a simulation of a car (or runner) that accelerates when you press the up key and brakes when you press the down key.

Mover mover;

 public void setup() {
  /* size commented out by preprocessor */;
  mover = new Mover();
}

 public void draw() {
  background(255);
  mover.update();
  mover.checkEdges();
  mover.display();
}


 public void keyPressed() {
  println(keyCode);
  // println(keyIndex);
  if (key == CODED) {
    if (keyCode == UP) {
      print("up");
      mover.speedUp();
    } else if (keyCode == DOWN) {
      println("down");
      mover.slowDown();
    }
  }
}
class Mover {
  PVector location;
  PVector velocity;
  PVector acceleration;
  
  float topSpeed;
  
  public Mover() {
    location = new PVector(random(width), random(height));
    // velocity = new PVector(random( -2, 2), random( -2,2));
    velocity = new PVector(random( -2, 2),0);
    // acceleration = new PVector(random( -0.005, 0.01), random( -0.5, 0.5));
    acceleration = new PVector(0.01f, 0);
    topSpeed = 10;
  }
  
   public void update() {
    //When key 'UP pressed increase acceleration
    // When key 'DOWN' is proessed decrease acceleration
    // keyPressed();
    // velocity.add(acceleration);
    velocity.limit(topSpeed);
    
    location.add(velocity);
  }
  
   public void display() {
    stroke(0);
    fill(175);
    ellipse(location.x, location.y, 16, 16);
  }
  
   public void checkEdges() {
    if (location.x > width) {
      location.x = 0;
    } else if (location.x < 0) {
      location.x = width;
    }
    
    if (location.y > height) {
      location.y = 0;
    } else if (location.y < 0) {
      location.y = height;
    }
  }
  
   public void speedUp() {
    velocity.add(acceleration);
  }
  
   public void slowDown() {
    velocity.sub(acceleration);
  }
  
  
  // void keyPressed() {
  //   float keyIndex = -1;
  //   if(key == UP) {
  //     keyIndex = key;
  //   } else if (key == DOWN) {
  //     keyIndex = key;
  //   }
  //   println(key);
  //   println(keyIndex);
  //if (keyIndex == -1) {
  //// If it's not a letter key, clear the screen
  //background(0);
  // } else { 
  //// It's a letter key, fill a rectangle
  //fill(millis() % 255);
  //float x = map(keyIndex, 0, 25, 0, width - rectWidth);
  //rect(x, 0, rectWidth, height);
  // }
  // }
}


  public void settings() { size(300, 300); }

  static public void main(String[] passedArgs) {
    String[] appletArgs = new String[] { "AccelerationInputs" };
    if (passedArgs != null) {
      PApplet.main(concat(appletArgs, passedArgs));
    } else {
      PApplet.main(appletArgs);
    }
  }
}
