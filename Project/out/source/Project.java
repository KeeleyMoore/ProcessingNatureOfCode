/* autogenerated by Processing revision 1276 on 2021-12-08 */
import processing.core.*;
import processing.data.*;
import processing.event.*;
import processing.opengl.*;

import java.util.*;

import java.util.HashMap;
import java.util.ArrayList;
import java.io.File;
import java.io.BufferedReader;
import java.io.PrintWriter;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.IOException;

public class Project extends PApplet {



Hopper hopper;

 public void setup() {
  /* size commented out by preprocessor */;
  hopper = new Hopper(width / 2, height / 2);
  background(255);
}

 public void draw() {
  background(255);
  hopper.render();
  hopper.checkEdges();
  hopper.step();
}
Random randomeGen;

class Hopper {
  PVector location;
  
  public Hopper(float _x, float _y) {
    location = new PVector(_x, _y);
    randomeGen = new Random();
  }
  
   public void render() {
    stroke(255, 176, 100);
    point(location.x, location.y);
  }
  
   public void step() {
    float stepValueX = (float) randomeGen.nextGaussian() * 4;
    float stepValueY = (float) randomeGen.nextGaussian() * 4;
    float stepx = PApplet.parseInt(random(1)) - stepValueX;
    float stepy = PApplet.parseInt(random(1)) - stepValueY;
    
    location.x += stepx;
    location.y += stepy;
  }
  
   public void checkEdges() {
    if (location.x > width) {
      location.x = 0;
    } else if (location.x < 0) {
      location.x = width;
    }
    
    if (location.y > height) {
      location.y = 0;
    } else if (location.y < 0) {
      location.y = height;
    }
  }
}


  public void settings() { size(100, 100); }

  static public void main(String[] passedArgs) {
    String[] appletArgs = new String[] { "Project" };
    if (passedArgs != null) {
      PApplet.main(concat(appletArgs, passedArgs));
    } else {
      PApplet.main(appletArgs);
    }
  }
}
